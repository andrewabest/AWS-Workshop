{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "A template to deploy a simple fault tolerant load balanced web hosting infrastructure.",

    "Parameters": {
        "S3BucketName": {
            "Description": "The S3 Bucket Name used in URL's to specify authentication against.",
            "Type": "String"
        },
        "VpcId": {
            "Description": "The Vpc to deploy the infrastructure into.",
            "Type": "String"
        },
        "PowerShellModulesBundleUrl": {
            "Description": "The URL to a ZIP file containing any PowerShell modules required by this CloudFormation template.",
            "Type": "String"
        },
        "BootstrapperScriptBundleUrl": {
            "Description": "The URL to a ZIP file containing the PowerShell script package to bootstrap EC2 instances in this CloudFormation template.",
            "Type": "String"
        },
        "WebserverTemplateUrl": {
            "Description": "The URL to the CloudFormation stack template for web servers.",
            "Type": "String"
        },
        "Timestamp": {
            "Description": "When this CloudFormation stack was last updated.",
            "Type": "String"
        },
        "Version": {
            "Description": "The package version that contains this CloudFormation template.",
            "Type": "String"
        },
        "Environment": {
            "Type": "String",
            "Default": "Development"
        },
        "KeyPairName": {
            "Description": "The EC2 key pair used to launch web instances",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "WebserverImageId": {
            "Description": "The EC2 AmiId to use for web",
            "Type": "String",
            "Default": "ami-f9760dc3"
        },
        "WebserverInstanceType": {
            "Description": "The EC2 instance type to use for web",
            "Type": "String",
            "Default": "t2.small"
        },
        "WebserverSubnetIdAzOne": {
            "Description": "The PUBLIC subnet belonging to availability zone one into which the instance will be launched",
            "Type": "String"
        },
        "WebserverSubnetIdAzTwo": {
            "Description": "The PUBLIC subnet belonging to availability zone two into which the instance will be launched",
            "Type": "String"
        },
        "LoadBalancerSubnetIdAzOne": {
            "Description": "The PUBLIC IG-connected subnet belonging to availability zone one that the load balancer will belong to",
            "Type": "String"
        },
        "LoadBalancerSubnetIdAzTwo": {
            "Description": "The PUBLIC IG-connected subnet belonging to availability zone two that the load balancer will belong to",
            "Type": "String"
        },
		"ResourcePrefix" : {
			"Description": "Used to prefix a unique name to resources where applicable",
			"Type": "String"
		}
	},

    "Resources": {
        "BootstrapRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [ "ec2.amazonaws.com" ]
                            },
                            "Action": [ "sts:AssumeRole" ]
                        }
                    ]
                },
                "Path": "/"
            }
        },
        "BootstrapRolePolicies": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "bootstrap",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "s3:*",
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "S3BucketName" } ] ] },
                                { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "S3BucketName" }, "/*" ] ] }
                            ]
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "BootstrapRole"
                    }
                ]
            }
        },
        "BootstrapInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "BootstrapRole"
                    }
                ]
            }
        },
        "WebStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "S3BucketName": { "Ref": "S3BucketName" },
                    "VpcId": { "Ref": "VpcId" },
                    "PowerShellModulesBundleUrl": { "Ref": "PowerShellModulesBundleUrl" },
                    "BootstrapperScriptBundleUrl": { "Ref": "BootstrapperScriptBundleUrl" },
                    "Timestamp": { "Ref": "Timestamp" },
                    "Version": { "Ref": "Version" },
                    "Environment": { "Ref": "Environment" },
                    "InstanceProfile": { "Ref": "BootstrapInstanceProfile" },
                    "BootstrapperRole": { "Ref": "BootstrapRole" },
                    "KeyPairName": { "Ref": "KeyPairName" },
                    "WebserverImageId": { "Ref": "WebserverImageId" },
                    "WebserverInstanceType": { "Ref": "WebserverInstanceType" },
                    "WebserverSubnetIdAzOne": { "Ref": "WebserverSubnetIdAzOne" },
                    "WebserverSubnetIdAzTwo": { "Ref": "WebserverSubnetIdAzTwo" },
                    "LoadBalancerSubnetIdAzOne": { "Ref": "LoadBalancerSubnetIdAzOne" },
                    "LoadBalancerSubnetIdAzTwo": { "Ref": "LoadBalancerSubnetIdAzTwo" },
					          "ResourcePrefix": { "Ref": "ResourcePrefix" }
                },
                "TemplateURL": { "Ref": "WebserverTemplateUrl" },
                "TimeoutInMinutes": 10
            }
        }
    },

    "Outputs": {
        "LoadBalancerUri": {
            "Value": { "Fn::GetAtt": [ "WebStack", "Outputs.LoadBalancerUri" ] }
        }
    }
}